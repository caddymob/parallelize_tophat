####Parameterized PBS Script ####
#PBS -S /bin/bash
#PBS -l walltime=48:00:00
#PBS -o /users/jcorneveaux/jobOuts/${PBS_JOBNAME}_${PBS_JOBID}.o
#PBS -l nodes=1:ppn=12
#PBS -j oe
#PBS -M jcorneveaux@tgen.org
#PBS -m abe

cd ${PBS_O_WORKDIR}

START=$(date +%s)

#this export should transfer all my variables wherever I am
source ~/SCRIPTS/parallelize_tophat/tophat2/export_paths-IDs_tophat-cufflinks.sh

echo "`date` merge_bams begin"

BAMS=(`find . -name accepted_hits.bam | wc -l`)
if [[ $BAMS -le 0 ]] ; then
	echo "seems there are no bams to merge! Exit..."
	exit
fi

BAMS=(`find . -name accepted_hits.bam | tr "\n" " "`)
BAMHEAD=`find . -name accepted_hits.bam 2>/dev/null | head -n 1`

echo -ne "\n\nStarted the merge, runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

${SAMTOOLS} view -H ${BAMS[1]} > header.txt

${SAMTOOLS} merge -f -r -h $BAMHEAD ${SAMPLE_ID}_merged.bam ${BAMS[@]}

echo -ne "\n\nMerge done, now fixing header, runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

${SAMTOOLS} reheader header.txt ${SAMPLE_ID}_merged.bam > ${SAMPLE_ID}.accepted_hits.bam

echo -ne "\n\nReheader is done, now index and start flagstat runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

rm ${SAMPLE_ID}_merged.bam
rm header.txt

${SAMTOOLS} index ${SAMPLE_ID}.accepted_hits.bam

${SAMTOOLS} flagstat ${SAMPLE_ID}.accepted_hits.bam > ${SAMPLE_ID}.accepted_hits.flagstat &

echo -ne "\n\nmerge_bams done, start cufflinks, runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

bash ~/SCRIPTS/RunCufflinks2.sh

echo -ne "\n\ncufflinks done, now clean-up, runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

rm R1* &
rm R2* &

wait

RM_DIRS=`ls -d */ | grep -v jobLogs`

for dirs in ${RM_DIRS[@]}
do
	echo "removing temp dir for $dirs"
	rm -rf $dirs 
	sleep 1
done

echo "Finished $SAMPLE_ID test at `date`" >> splitbam.${SAMPLE_ID}.timeCount.txt

echo -ne  "Finished merge with runtime: "
bash ~/SCRIPTS/TimeOut.sh $START
