####Parameterized PBS Script ####
#PBS -A tgen-204000
#PBS -S /bin/bash
#PBS -l walltime=48:00:00
#PBS -o ${HOME}/jobOuts/parallelize_tophat/${PBS_JOBNAME}_${PBS_JOBID}.o
#PBS -l nodes=1
#PBS -j oe
#PBS -V
#PBS -M jcorneveaux@tgen.org
#PBS -m abe

cd ${PBS_O_WORKDIR}

START=$(date +%s)

#this export should transfer all my variables wherever I am
source ~/SCRIPTS/parallelize_tophat/tophat2/export_paths-IDs_tophat-cufflinks.sh

echo "`date` merge_bams begin"

BAMS=(`find . -name accepted_hits.bam | wc -l`)
if [[ $BAMS -le 0 ]] ; then
	echo "seems there are no bams to merge! Exit..."
	exit
fi

MAPPED_BAMS_TO_MERGE=$(find . -name "*accepted_hits.bam" | awk '{print"I="$0" "}' )
MAPPED_BAM_COUNT=`find . -name accepted_hits.bam | wc -l`

UNMAPPED_BAMS_TO_MERGE=$(find . -name "*unmapped.bam" | awk '{print"I="$0" "}' )
UNMAPPED_BAM_COUNT=`find . -name "*unmapped.bam" | wc -l`

echo -ne "\nFound ${MAPPED_BAM_COUNT} .bam files \nStarted the merge, begin the merge..."

MERGESTART=$(date +%s)

java -Xmx16g -jar ${PICARD}MergeSamFiles.jar \
VALIDATION_STRINGENCY=SILENT \
${MAPPED_BAMS_TO_MERGE[@]} \
ASSUME_SORTED=true \
SO=coordinate \
CREATE_INDEX=true \
USE_THREADING=true \
MAX_RECORDS_IN_RAM=6000000 \
O=${SAMPLE_ID}.accepted_hits.bam &

java -Xmx16g -jar ${PICARD}MergeSamFiles.jar \
VALIDATION_STRINGENCY=SILENT \
${UNMAPPED_BAMS_TO_MERGE[@]} \
ASSUME_SORTED=true \
SO=coordinate \
CREATE_INDEX=true \
USE_THREADING=true \
MAX_RECORDS_IN_RAM=6000000 \
O=${SAMPLE_ID}.unmapped.bam &

wait

echo -ne "\n\nPicard is done merging $BAM_COUNT, which itself took: `bash ~/SCRIPTS/TimeOut.sh $MERGESTART`\n"

echo -ne "\n\nPicard is done merging $BAM_COUNT, which itself took: `bash ~/SCRIPTS/TimeOut.sh $MERGESTART`\n" >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log

${SAMTOOLS} flagstat ${SAMPLE_ID}.accepted_hits.bam > ${SAMPLE_ID}.accepted_hits.flagstat 

echo -ne "\n\nHere is the final bam flagstat:\n `cat ${SAMPLE_ID}.accepted_hits.flagstat`\n\n"

echo -ne "\n\nHere is the final bam flagstat:\n `cat ${SAMPLE_ID}.accepted_hits.flagstat`\n\n" >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log
cat ${SAMPLE_ID}.accepted_hits.flagstat >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log

echo -ne "\n\nmerge_bams done. Time: `bash ~/SCRIPTS/TimeOut.sh $START`"
