####Parameterized PBS Script ####
#PBS -A tgen-204000
#PBS -S /bin/bash
#PBS -l walltime=48:00:00
#PBS -o /users/jcorneveaux/jobOuts/${PBS_JOBNAME}_${PBS_JOBID}.o
#PBS -l nodes=1:ppn=12
#PBS -j oe
#PBS -V
#PBS -M jcorneveaux@tgen.org
#PBS -m abe

cd ${PBS_O_WORKDIR}

START=$(date +%s)

#this export should transfer all my variables wherever I am
source ~/SCRIPTS/parallelize_tophat/tophat2/export_paths-IDs_tophat-cufflinks.sh

echo "`date` merge_bams begin"

BAMS=(`find . -name accepted_hits.bam | wc -l`)
if [[ $BAMS -le 0 ]] ; then
	echo "seems there are no bams to merge! Exit..."
	exit
fi

BAMS_TO_MERGE=$(find . -name accepted_hits.bam | awk '{print"I="$0" "}' )
BAM_COUNT=`find . -name accepted_hits.bam | wc -l`

echo -ne "\n\nStarted the merge, runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

MERGESTART=$(date +%s)

java -Xmx24g -jar ${PICARD}MergeSamFiles.jar \
VALIDATION_STRINGENCY=SILENT \
${BAMS_TO_MERGE[@]} \
ASSUME_SORTED=true \
SO=coordinate \
CREATE_INDEX=true \
USE_THREADING=true \
MAX_RECORDS_IN_RAM=6000000 \
O=${SAMPLE_ID}.accepted_hits.bam

echo -ne "\n\nPicard is done merging $BAM_COUNT, which itself took: "
bash ~/SCRIPTS/TimeOut.sh $MERGESTART

echo -ne "\n\nPicard is done merging $BAM_COUNT, which itself took: `bash ~/SCRIPTS/TimeOut.sh $MERGESTART`" >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log

${SAMTOOLS} flagstat ${SAMPLE_ID}.accepted_hits.bam > ${SAMPLE_ID}.accepted_hits.flagstat 

echo -ne "\n\nHere is the final bam flagstat:\n `cat ${SAMPLE_ID}.accepted_hits.flagstat`\n\n"

echo -ne "\n\nHere is the final bam flagstat:\n `cat ${SAMPLE_ID}.accepted_hits.flagstat`\n\n" >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log
cat ${SAMPLE_ID}.accepted_hits.flagstat >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log

echo -ne "\n\nmerge_bams done, start cufflinks, runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

STARTCUFF=$(date +%s)
bash ~/SCRIPTS/RunCufflinks2.sh

echo -ne "\n\ncufflinks done, now clean-up, time on cuff: `bash ~/SCRIPTS/TimeOut.sh ${STARTCUFF}`, total runtime: "
echo -ne "\n\ncufflinks done, now clean-up, time on cuff: `bash ~/SCRIPTS/TimeOut.sh ${STARTCUFF}`, total runtime: " >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log
bash ~/SCRIPTS/TimeOut.sh $START
bash ~/SCRIPTS/TimeOut.sh $START >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log

rm R1* &
rm R2* &

RM_DIRS=`ls -d */ | grep -v jobLogs`

for dirs in ${RM_DIRS[@]}
do
	echo "removing temp dir for $dirs"
	echo "removing temp dir for $dirs" >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log
	rm -rf $dirs &
	sleep 10
done

wait

echo -ne "\n\nFinished $SAMPLE_ID at `date` \n\n" >> ${JOB_PATH}/jobLogs/splitbam.${SAMPLE_ID}.timeCount.txt
echo -ne "\n\nFinished $SAMPLE_ID at `date` \n\n" >> ${JOB_PATH}/jobLogs/${SAMPLE_ID}.cron.log

echo -ne  "Finished merge with runtime: "
bash ~/SCRIPTS/TimeOut.sh $START

echo -ne "Finished merge, cufflinks, and cleanup with runtime: `bash ~/SCRIPTS/TimeOut.sh $START` \n\n"


